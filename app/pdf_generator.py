from reportlab.lib.pagesizes import letter, A4
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Table, TableStyle
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.lib.units import inch
from reportlab.lib import colors
import io
from datetime import datetime

def generate_study_plan_pdf(course, plan):
    """Generate PDF for a study plan"""
    buffer = io.BytesIO()
    
    # Create PDF document
    doc = SimpleDocTemplate(buffer, pagesize=A4)
    story = []
    
    # Get styles
    styles = getSampleStyleSheet()
    title_style = styles['Title']
    heading_style = styles['Heading1']
    normal_style = styles['Normal']
    
    # Title
    story.append(Paragraph(f"Study Plan: {course.title}", title_style))
    story.append(Paragraph(f"Course Code: {course.code}", normal_style))
    story.append(Paragraph(f"Generated: {datetime.now().strftime('%B %d, %Y')}", normal_style))
    story.append(Spacer(1, 0.3*inch))
    
    # Plan content
    if plan:
        for semester, units in plan.items():
            story.append(Paragraph(semester, heading_style))
            
            if units:
                # Create table for units
                table_data = [['Unit Code', 'Unit Title', 'Credit Points']]
                
                for unit_code in units:
                    # You could enhance this to show unit titles by querying the database
                    table_data.append([unit_code, '', '6'])  # Default values for now
                
                table = Table(table_data, colWidths=[1.5*inch, 3*inch, 1*inch])
                table.setStyle(TableStyle([
                    ('BACKGROUND', (0, 0), (-1, 0), colors.grey),
                    ('TEXTCOLOR', (0, 0), (-1, 0), colors.whitesmoke),
                    ('ALIGN', (0, 0), (-1, -1), 'LEFT'),
                    ('FONTNAME', (0, 0), (-1, 0), 'Helvetica-Bold'),
                    ('FONTSIZE', (0, 0), (-1, 0), 12),
                    ('BOTTOMPADDING', (0, 0), (-1, 0), 12),
                    ('BACKGROUND', (0, 1), (-1, -1), colors.beige),
                    ('GRID', (0, 0), (-1, -1), 1, colors.black)
                ]))
                
                story.append(table)
            else:
                story.append(Paragraph("No units scheduled", normal_style))
            
            story.append(Spacer(1, 0.2*inch))
    else:
        story.append(Paragraph("No plan available", normal_style))
    
    # Footer
    story.append(Spacer(1, 0.5*inch))
    story.append(Paragraph("Generated by AI Study Planner", normal_style))
    story.append(Paragraph("This is a draft plan. Please consult with academic advisors.", normal_style))
    
    # Build PDF
    doc.build(story)
    buffer.seek(0)
    
    return buffer